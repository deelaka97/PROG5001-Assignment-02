#BlueJ class context
comment0.target=StatComputer
comment0.text=\r\n\ Write\ a\ description\ of\ class\ StatComputer\ here.\r\n\r\n\ @author\ (your\ name)\r\n\ @version\ (a\ version\ number\ or\ a\ date)\r\n
comment1.params=args
comment1.target=void\ main(java.lang.String[])
comment1.text=\r\n\ Main\ method\ to\ get\ started\ from\r\n
comment10.params=reader
comment10.target=void\ readLines(java.io.BufferedReader)
comment10.text=\r\n\ Reads\ the\ lines\ from\ the\ file\r\n\ @param\ reader\ BufferedReader\ object\r\n\ @return\ List\ of\ Students\r\n
comment2.params=
comment2.target=void\ readFile()
comment2.text=\r\n\ Read\ the\ stats\ from\ the\ file\ and\ save\ them\ to\ the\ unitName\ and\ students.\r\n\ File\ name\ defaults\ into\ "stats.txt".\ if\ "stats.txt"\ does\ not\ exist,\ ask\r\n\ the\ user\ to\ enter\ the\ location\ of\ the\ file.\ Continuously\ asks\ for\ a\ file\r\n\ name\ if\ the\ given\ file\ name\ does\ not\ exist\ on\ the\ disk\r\n\r\n
comment3.params=
comment3.target=void\ printMenu()
comment3.text=\r\n\ Prints\ the\ menu\ for\ the\ console\r\n
comment4.params=
comment4.target=void\ printHighestAndLowestMarks()
comment4.text=\r\n\ Finds\ and\ prints\ the\ 5\ students\ with\ highest\ and\ lowest\ total\ marks\r\n
comment5.params=
comment5.target=void\ sortStudents()
comment5.text=\r\n\ Sorts\ the\ students\ list\ in\ decreasing\ order\ using\ bubble\ sort\r\n
comment6.params=
comment6.target=void\ printStudentsBelowThreshold()
comment6.text=\r\n\ Find\ and\ print\ the\ students\ with\ below\ threshold\ total\ score.\r\n\ Threshold\ is\ read\ from\ the\ user\ input\ after\ running\ the\ function\r\n
comment7.params=
comment7.target=void\ printTotalMarks()
comment7.text=\r\n\ Calculates\ and\ prints\ total\ marks\ for\ each\ student\ read\ from\ the\ stats\ file\r\n
comment8.params=filePath
comment8.target=boolean\ checkIfFileExists(java.lang.String)
comment8.text=\r\n\ Method\ to\ check\ if\ the\ file\ exists\ on\ disk\r\n\ @param\ filePath\ path\ to\ the\ file\r\n\ @return\ true\ if\ the\ file\ exists,\ false\ otherwise\r\n
comment9.params=filePath
comment9.target=java.io.BufferedReader\ getReader(java.lang.String)
comment9.text=\r\n\ Creates\ a\ BufferedReader\ from\ the\ file\r\n\ @param\ filePath\ path\ to\ the\ file\r\n\ @return\ BufferedReader\ object\r\n
numComments=11
